---
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions: write-all
env:
  PACKER_VERSION: 1.8.5
  PACKER_BASE_URL: https://releases.hashicorp.com/packer
  NOMAD_VERSION: 1.5.6
  NOMAD_BASE_URL: https://releases.hashicorp.com/nomad
  NOMAD_ADDR: ${{ vars.NOMAD_ADDR }}
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get Packer
        run: |
          curl -fSL "${PACKER_BASE_URL}/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip" | gunzip -> packer
          chmod u+x packer
      - name: Packer init
        run: ./packer init packer.pkr.hcl
      - name: Validate Packer template
        run: ./packer validate packer.pkr.hcl
      - name: Build image
        run: ./packer build packer.pkr.hcl

  deploy:
    needs:
      - build
    continue-on-error: true
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Connect Tailscale
        uses: tailscale/github-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get Nomad
        run: |
          curl -fSL "${NOMAD_BASE_URL}/${NOMAD_VERSION}/nomad_${NOMAD_VERSION}_linux_amd64.zip" | gunzip -> nomad
          chmod u+x nomad
      - name: Validate Nomad job
        run: ./nomad validate st2.nomad
      - name: Plan
        id: plan
        run: ./nomad plan st2.nomad || echo PLAN_OUT=$? >> "$GITHUB_OUTPUT"
        continue-on-error: true
      - name: Check error
        run: echo "There was an error"
        if: ${{ steps.plan.outputs.PLAN_OUT != 1 }}
  release:
    name: release
    needs:
      - deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm install -g "semantic-release" "@semantic-release/github" "@semantic-release/commit-analyzer" "@semantic-release/release-notes-generator"
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
